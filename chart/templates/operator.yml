{{- if or (eq .Values.spec "allinone") (eq .Values.spec "infra") }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cnvrg-operator
  namespace: {{ template "spec.cnvrgNs" . }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: cnvrg-operator-role
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - mlops.cnvrg.io
    resources:
      - cnvrgapps
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - mlops.cnvrg.io
    resources:
      - cnvrgapps/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - mlops.cnvrg.io
    resources:
      - cnvrginfras
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - mlops.cnvrg.io
    resources:
      - cnvrginfras/status
    verbs:
      - get
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cnvrg-operator-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cnvrg-operator-role
subjects:
  - kind: ServiceAccount
    name: cnvrg-operator
    namespace: {{ template "spec.cnvrgNs" . }}
---
apiVersion: v1
kind: Secret
type: kubernetes.io/dockerconfigjson
metadata:
  name: operator-pull-secret
  namespace: {{ template "spec.cnvrgNs" . }}
data:
  .dockerconfigjson: {{ printf "{\"auths\":{\"%s\":{\"username\":\"%s\",\"password\":\"%s\",\"auth\":\"%s\"}}}" .Values.registry.url .Values.registry.user .Values.registry.password (printf "%s:%s" .Values.registry.user .Values.registry.password | b64enc) | b64enc }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: cnvrg-operator
  name: cnvrg-operator
  namespace: {{ template "spec.cnvrgNs" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: cnvrg-operator
  template:
    metadata:
      labels:
        control-plane: cnvrg-operator
    spec:
      {{- if .Values.tenancy.enabled }}
      nodeSelector:
        {{ .Values.tenancy.key }}: "{{ .Values.tenancy.value }}"
      tolerations:
        - key: "{{ .Values.tenancy.key }}"
          operator: "Equal"
          value: "{{ .Values.tenancy.value }}"
          effect: "NoSchedule"
      {{- end }}
      imagePullSecrets:
        - name: operator-pull-secret
      containers:
        - command:
            - /opt/app-root/cnvrg-operator
            - start
            - --max-concurrent-reconciles
            - "3"
          image: "{{ .Values.imageHub }}/cnvrg-operator:{{ .Chart.Version }}"
          imagePullPolicy: Always
          name: cnvrg-operator
          resources:
            limits:
              cpu: 1000m
              memory: 1000Mi
            requests:
              cpu: 500m
              memory: 200Mi
      serviceAccountName: cnvrg-operator
      terminationGracePeriodSeconds: 10

---
{{- end }}
