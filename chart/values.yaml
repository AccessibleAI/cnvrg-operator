clusterDomain: ""
spec: allinone # allinone|infra|ccp
imageHub: docker.io/cnvrg

labels: {}
annotations: {}

controlPlane:
  image: core:3.6.99
  baseConfig:
    agentCustomTag: latest
    intercom: "true"
    featureFlags: {}
  hyper:
    enabled: true
  objectStorage:
    type: minio
    bucket: cnvrg-storage
    region: eastus
    accessKey: ""
    secretKey: ""
    endpoint: ""
    azureAccountName: ""
    azureContainer: ""
    gcpSecretRef: gcp-storage-secret
    gcpProject: ""
  searchkiq:
    enabled: true
  sidekiq:
    enabled: true
    split: true
  smtp:
    server: ""
    port: 587
    username: ""
    password: ""
    domain: ""
  systemkiq:
    enabled: true
  webapp:
    enabled: true
    replicas: 1
  mpi:
    enabled: true
    image: "mpioperator/mpi-operator:v0.2.3"
    kubectlDeliveryImage: "mpioperator/kubectl-delivery:v0.2.3"
    extraArgs: { }

dbs:
  es:
    enabled: true
    storageSize: 80Gi
    storageClass: ""
    nodeSelector: { }
  minio:
    enabled: true
    storageSize: 100Gi
    storageClass: ""
    nodeSelector: { }
  pg:
    enabled: true
    storageSize: 80Gi
    storageClass: ""
    nodeSelector: { }
    hugePages:
      enabled: false
      size: 2Mi
      memory: ""
  redis:
    enabled: true
    storageSize: 10Gi
    storageClass: ""
    nodeSelector: { }

logging:
  fluentbit:
    enabled: true
  elastalert:
    enabled: true
    storageSize: "30Gi"
    storageClass: ""
    nodeSelector: { }
  kibana:
    enabled: true

monitoring:

  dcgmExporter:
    enabled: true

  nodeExporter:
    enabled: true

  kubeStateMetrics:
    enabled: true

  grafana:
    enabled: true

  prometheusOperator:
    enabled: true

  prometheus:
    enabled: true
    storageSize: "50Gi"
    storageClass: ""
    nodeSelector: { }

  defaultServiceMonitors:
    enabled: true

  cnvrgIdleMetricsExporter:
    enabled: true
    labels: { }

networking:
  https:
    enabled: false
    certSecret: ""
  ingress:
    type: "istio"
  istio:
    enabled: true
    externalIp: [ ]
    ingressSvcAnnotations: { }
    ingressSvcExtraPorts: [ ]
    lbSourceRanges: [ ]

sso:
  enabled: false
  adminUser: ""
  provider: ""
  emailDomain: [ ]
  clientId: ""
  clientSecret: ""
  azureTenant: ""
  oidcIssuerUrl: ""

storage:
  hostpath:
    enabled: false
    defaultSc: false
    path: /cnvrg-hostpath-storage
    reclaimPolicy: Retain
    nodeSelector: { }
  nfs:
    enabled: false
    server: ""
    path: ""
    defaultSc: false
    reclaimPolicy: Retain

tenancy:
  enabled: false
  key: "purpose"
  value: "cnvrg-control-plane"

registry:
  url: docker.io
  user: ""
  password: ""
