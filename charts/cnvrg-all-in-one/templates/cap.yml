apiVersion: mlops.cnvrg.io/v1
kind: CnvrgApp
metadata:
  name: cnvrg-app
  namespace: {{ .Release.Namespace}}
spec:
  clusterDomain: {{.Values.clusterDomain}}
  clusterInternalDomain: {{.Values.clusterInternalDomain}}
  imageHub: {{.Values.imageHub}}
  controlPlane:
    image: {{.Values.controlPlane.image}}
    webapp:
      replicas: {{.Values.controlPlane.webapp.replicas}}
      enabled: {{.Values.controlPlane.webapp.enabled}}
      port: {{.Values.controlPlane.webapp.port}}
      requests:
        cpu: "{{.Values.controlPlane.webapp.requests.cpu}}"
        memory: {{.Values.controlPlane.webapp.requests.memory}}
      limits:
        cpu: "{{.Values.controlPlane.webapp.limits.cpu}}"
        memory: {{.Values.controlPlane.webapp.limits.memory}}
      svcName: {{.Values.controlPlane.webapp.svcName}}
      nodePort: {{.Values.controlPlane.webapp.nodePort}}
      passengerMaxPoolSize: {{.Values.controlPlane.webapp.passengerMaxPoolSize}}
      initialDelaySeconds: {{.Values.controlPlane.webapp.initialDelaySeconds}}
      readinessPeriodSeconds: {{.Values.controlPlane.webapp.readinessPeriodSeconds}}
      readinessTimeoutSeconds: {{.Values.controlPlane.webapp.readinessTimeoutSeconds}}
      failureThreshold: {{.Values.controlPlane.webapp.failureThreshold}}
      hpa:
        enabled: {{.Values.controlPlane.webapp.hpa.enabled}}
        utilization: {{.Values.controlPlane.webapp.hpa.utilization}}
        maxReplicas: {{.Values.controlPlane.webapp.hpa.maxReplicas}}
    sidekiq:
      enabled: {{.Values.controlPlane.sidekiq.enabled}}
      split: {{.Values.controlPlane.sidekiq.split}}
      requests:
        cpu: "{{.Values.controlPlane.sidekiq.requests.cpu}}"
        memory: {{.Values.controlPlane.sidekiq.requests.memory}}
      limits:
        cpu: "{{.Values.controlPlane.sidekiq.limits.cpu}}"
        memory: {{.Values.controlPlane.sidekiq.limits.memory}}
      replicas: {{.Values.controlPlane.sidekiq.replicas}}
      hpa:
        enabled: {{.Values.controlPlane.sidekiq.hpa.enabled}}
        utilization: {{.Values.controlPlane.sidekiq.hpa.utilization}}
        maxReplicas: {{.Values.controlPlane.sidekiq.hpa.maxReplicas}}
    searchkiq:
      enabled: {{.Values.controlPlane.searchkiq.enabled}}
      requests:
        cpu: "{{.Values.controlPlane.searchkiq.requests.cpu}}"
        memory: {{.Values.controlPlane.searchkiq.requests.memory}}
      limits:
        cpu: "{{.Values.controlPlane.searchkiq.limits.cpu}}"
        memory: "{{.Values.controlPlane.searchkiq.limits.memory}}"
      replicas: {{.Values.controlPlane.searchkiq.replicas}}
      hpa:
        enabled: {{.Values.controlPlane.searchkiq.hpa.enabled}}
        utilization: {{.Values.controlPlane.searchkiq.hpa.utilization}}
        maxReplicas: {{.Values.controlPlane.searchkiq.hpa.maxReplicas}}
    systemkiq:
      enabled: {{.Values.controlPlane.systemkiq.enabled}}
      requests:
        cpu: "{{.Values.controlPlane.systemkiq.requests.cpu}}"
        memory: {{.Values.controlPlane.systemkiq.requests.memory}}
      limits:
        cpu: "{{.Values.controlPlane.systemkiq.limits.cpu}}"
        memory: {{.Values.controlPlane.systemkiq.limits.memory}}
      replicas: {{.Values.controlPlane.systemkiq.replicas}}
      hpa:
        enabled: {{.Values.controlPlane.systemkiq.hpa.enabled}}
        utilization: {{.Values.controlPlane.systemkiq.hpa.utilization}}
        maxReplicas: {{.Values.controlPlane.systemkiq.hpa.maxReplicas}}
    hyper:
      enabled: {{.Values.controlPlane.hyper.enabled}}
      image: {{.Values.controlPlane.hyper.image}}
      port: {{.Values.controlPlane.hyper.port}}
      replicas: {{.Values.controlPlane.hyper.replicas}}
      nodePort: {{.Values.controlPlane.hyper.nodePort}}
      svcName: {{.Values.controlPlane.hyper.svcName}}
      token: {{.Values.controlPlane.hyper.token}}
      requests:
        cpu: {{.Values.controlPlane.hyper.requests.cpu}}
        memory: {{.Values.controlPlane.hyper.requests.memory}}
      limits:
        cpu: "{{.Values.controlPlane.hyper.limits.cpu}}"
        memory: {{.Values.controlPlane.hyper.limits.memory}}
      cpuLimit: {{.Values.controlPlane.hyper.cpuLimit}}
      memoryLimit: {{.Values.controlPlane.hyper.memoryLimit}}
      readinessPeriodSeconds: {{.Values.controlPlane.hyper.readinessPeriodSeconds}}
      readinessTimeoutSeconds: {{.Values.controlPlane.hyper.readinessTimeoutSeconds}}
    cnvrgScheduler:
      enabled: {{.Values.controlPlane.cnvrgScheduler.enabled}}
      requests:
        cpu: {{.Values.controlPlane.cnvrgScheduler.requests.cpu}}
        memory: {{.Values.controlPlane.cnvrgScheduler.requests.memory}}
      limits:
        cpu: "{{.Values.controlPlane.cnvrgScheduler.limits.cpu}}"
        memory: {{.Values.controlPlane.cnvrgScheduler.limits.memory}}
      replicas: {{.Values.controlPlane.cnvrgScheduler.replicas}}
    cnvrgRouter:
      enabled: {{.Values.controlPlane.cnvrgRouter.enabled}}
      image: {{.Values.controlPlane.cnvrgRouter.image}}
      svcName: {{.Values.controlPlane.cnvrgRouter.svcName}}
      nodePort: {{.Values.controlPlane.cnvrgRouter.nodePort}}
    baseConfig:
      jobsStorageClass: {{.Values.controlPlane.baseConfig.jobsStorageClass}}
      featureFlags:
      {{- range $fk, $fv := .Values.controlPlane.baseConfig.featureFlags }}
        {{$fk}}: "{{$fv}}"
      {{- end }}
      sentryUrl: {{.Values.controlPlane.baseConfig.sentryUrl}}
      runJobsOnSelfCluster: {{.Values.controlPlane.baseConfig.runJobsOnSelfCluster}}
      agentCustomTag: {{.Values.controlPlane.baseConfig.agentCustomTag}}
      intercom: "{{.Values.controlPlane.baseConfig.intercom}}"
      cnvrgJobUid: "{{.Values.controlPlane.baseConfig.cnvrgJobUid}}"
      cnvrgJobRbacStrict: {{.Values.controlPlane.baseConfig.cnvrgJobRbacStrict}}
      cnvrgPrivilegedJob: {{.Values.controlPlane.baseConfig.cnvrgPrivilegedJob}}
      metagpuEnabled: {{.Values.controlPlane.baseConfig.metagpuEnabled}}
    ldap:
      enabled: {{.Values.controlPlane.ldap.enabled}}
      host: {{.Values.controlPlane.ldap.host}}
      port: {{.Values.controlPlane.ldap.port}}
      account: {{.Values.controlPlane.ldap.account}}
      base: {{.Values.controlPlane.ldap.base}}
      adminUser: {{.Values.controlPlane.ldap.adminUser}}
      adminPassword: {{.Values.controlPlane.ldap.adminPassword}}
      ssl: {{.Values.controlPlane.ldap.ssl}}
    smtp:
      server: {{.Values.controlPlane.smtp.server}}
      port: {{.Values.controlPlane.smtp.port}}
      username: {{.Values.controlPlane.smtp.username}}
      password: {{.Values.controlPlane.smtp.password}}
      domain: {{.Values.controlPlane.smtp.domain}}
      opensslVerifyMode: {{.Values.controlPlane.smtp.opensslVerifyMode}}
      sender: {{.Values.controlPlane.smtp.sender}}
    objectStorage:
      type: {{.Values.controlPlane.objectStorage.type}}
      bucket: {{.Values.controlPlane.objectStorage.bucket}}
      region: {{.Values.controlPlane.objectStorage.region}}
      accessKey: {{.Values.controlPlane.objectStorage.accessKey}}
      secretKey: {{.Values.controlPlane.objectStorage.secretKey}}
      endpoint: {{.Values.controlPlane.objectStorage.endpoint}}
      azureAccountName: {{.Values.controlPlane.objectStorage.azureAccountName}}
      azureContainer: {{.Values.controlPlane.objectStorage.azureContainer}}
      gcpProject: {{.Values.controlPlane.objectStorage.gcpProject}}
      gcpSecretRef: {{.Values.controlPlane.objectStorage.gcpSecretRef}}
    mpi:
      enabled: {{.Values.controlPlane.mpi.enabled}}
      image: {{.Values.controlPlane.mpi.image}}
      kubectlDeliveryImage: {{.Values.controlPlane.mpi.kubectlDeliveryImage}}
      extraArgs: null
      registry:
        name: {{.Values.controlPlane.mpi.registry.name}}
        url: {{.Values.controlPlane.mpi.registry.url}}
        user: {{.Values.controlPlane.mpi.registry.user}}
        password: {{.Values.controlPlane.mpi.registry.password}}
      requests:
        cpu: {{.Values.controlPlane.mpi.requests.cpu}}
        memory: {{.Values.controlPlane.mpi.requests.memory}}
      limits:
        cpu: {{.Values.controlPlane.mpi.limits.cpu}}
        memory: {{.Values.controlPlane.mpi.limits.memory}}
    nomex:
      enabled: {{.Values.controlPlane.nomex.enabled}}
      image: {{.Values.controlPlane.nomex.image}}
  registry:
    name: {{.Values.registry.name}}
    url: {{.Values.registry.url}}
    user: {{.Values.registry.user}}
    password: {{.Values.registry.password}}
  dbs:
    pg:
      enabled: {{.Values.dbs.pg.enabled}}
      serviceAccount: {{.Values.dbs.pg.serviceAccount}}
      image: {{.Values.dbs.pg.image}}
      port: {{.Values.dbs.pg.port}}
      storageSize: {{.Values.dbs.pg.storageSize}}
      svcName: {{.Values.dbs.pg.svcName}}
      storageClass: {{.Values.dbs.pg.storageClass}}
      requests:
        cpu: "{{.Values.dbs.pg.requests.cpu}}"
        memory: {{.Values.dbs.pg.requests.memory}}
      limits:
        cpu: "{{.Values.dbs.pg.limits.cpu}}"
        memory: {{.Values.dbs.pg.limits.memory}}
      maxConnections: {{.Values.dbs.pg.maxConnections}}
      sharedBuffers: {{.Values.dbs.pg.sharedBuffers}}
      effectiveCacheSize: {{.Values.dbs.pg.effectiveCacheSize}}
      hugePages:
        enabled: {{.Values.dbs.pg.hugePages.enabled}}
        size: {{.Values.dbs.pg.hugePages.size}}
        memory: {{.Values.dbs.pg.hugePages.memory}}
      nodeSelector: null
      credsRef: {{.Values.dbs.pg.credsRef}}
      pvcName: {{.Values.dbs.pg.pvcName}}
    redis:
      enabled: {{.Values.dbs.redis.enabled}}
      serviceAccount: {{.Values.dbs.redis.serviceAccount}}
      image: {{.Values.dbs.redis.image}}
      svcName: {{.Values.dbs.redis.svcName}}
      port: {{.Values.dbs.redis.port}}
      storageSize: {{.Values.dbs.redis.storageSize}}
      storageClass: {{.Values.dbs.redis.storageClass}}
      requests:
        cpu: "{{.Values.dbs.redis.requests.cpu}}"
        memory: {{.Values.dbs.redis.requests.memory}}
      limits:
        cpu: "{{.Values.dbs.redis.limits.cpu}}"
        memory: {{.Values.dbs.redis.limits.memory}}
      nodeSelector: null
      credsRef: {{.Values.dbs.redis.credsRef}}
      pvcName: {{.Values.dbs.redis.pvcName}}
    minio:
      enabled: {{.Values.dbs.minio.enabled}}
      serviceAccount: {{.Values.dbs.minio.serviceAccount}}
      replicas: {{.Values.dbs.minio.replicas}}
      image: {{.Values.dbs.minio.image}}
      port: {{.Values.dbs.minio.port}}
      storageSize: {{.Values.dbs.minio.storageSize}}
      svcName: {{.Values.dbs.minio.svcName}}
      nodePort: {{.Values.dbs.minio.nodePort}}
      storageClass: {{.Values.dbs.minio.storageClass}}
      requests:
        cpu: "{{.Values.dbs.minio.requests.cpu}}"
        memory: {{.Values.dbs.minio.requests.memory}}
      limits:
        cpu: "{{.Values.dbs.minio.limits.cpu}}"
        memory: {{.Values.dbs.minio.limits.memory}}
      nodeSelector: null
      pvcName: {{.Values.dbs.minio.pvcName}}
    es:
      enabled: {{.Values.dbs.es.enabled}}
      serviceAccount: {{.Values.dbs.es.serviceAccount}}
      image: {{.Values.dbs.es.image}}
      port: {{.Values.dbs.es.port}}
      storageSize: {{.Values.dbs.es.storageSize}}
      svcName: {{.Values.dbs.es.svcName}}
      nodePort: {{.Values.dbs.es.nodePort}}
      storageClass: {{.Values.dbs.es.storageClass}}
      requests:
        cpu: "{{.Values.dbs.es.requests.cpu}}"
        memory: {{.Values.dbs.es.requests.memory}}
      limits:
        cpu: "{{.Values.dbs.es.limits.cpu}}"
        memory: {{.Values.dbs.es.limits.memory}}
      javaOpts: {{.Values.dbs.es.javaOpts}}
      patchEsNodes: {{.Values.dbs.es.patchEsNodes}}
      nodeSelector: null
      credsRef: {{.Values.dbs.es.credsRef}}
      pvcName: {{.Values.dbs.es.pvcName}}
      cleanupPolicy:
        all: {{.Values.dbs.es.cleanupPolicy.all}}
        app: {{.Values.dbs.es.cleanupPolicy.app}}
        jobs: {{.Values.dbs.es.cleanupPolicy.jobs}}
        endpoints: {{.Values.dbs.es.cleanupPolicy.endpoints}}
      kibana:
        enabled: {{.Values.dbs.es.kibana.enabled}}
        serviceAccount: {{.Values.dbs.es.kibana.serviceAccount}}
        svcName: {{.Values.dbs.es.kibana.svcName}}
        port: {{.Values.dbs.es.kibana.port}}
        image: {{.Values.dbs.es.kibana.image}}
        nodePort: {{.Values.dbs.es.kibana.nodePort}}
        requests:
          cpu: {{.Values.dbs.es.kibana.requests.cpu}}
          memory: {{.Values.dbs.es.kibana.requests.memory}}
        limits:
          cpu: {{.Values.dbs.es.kibana.limits.cpu}}
          memory: {{.Values.dbs.es.kibana.limits.memory}}
        credsRef: {{.Values.dbs.es.kibana.credsRef}}
      elastalert:
        enabled: {{.Values.dbs.es.elastalert.enabled}}
        image: {{.Values.dbs.es.elastalert.image}}
        authProxyImage: {{.Values.dbs.es.elastalert.authProxyImage}}
        credsRef: {{.Values.dbs.es.elastalert.credsRef}}
        port: {{.Values.dbs.es.elastalert.port}}
        nodePort: {{.Values.dbs.es.elastalert.nodePort}}
        storageSize: {{.Values.dbs.es.elastalert.storageSize}}
        svcName: {{.Values.dbs.es.elastalert.svcName}}
        storageClass: {{.Values.dbs.es.elastalert.storageClass}}
        requests:
          cpu: {{.Values.dbs.es.elastalert.requests.cpu}}
          memory: {{.Values.dbs.es.elastalert.requests.memory}}
        limits:
          cpu: {{.Values.dbs.es.elastalert.limits.cpu}}
          memory: {{.Values.dbs.es.elastalert.limits.memory}}
        nodeSelector: null
        pvcName: {{.Values.dbs.es.elastalert.pvcName}}
    prom:
      enabled: {{.Values.dbs.prom.enabled}}
      credsRef: {{.Values.dbs.prom.credsRef}}
      extraScrapeConfigs: null
      image: {{.Values.dbs.prom.image}}
      storageClass: {{.Values.dbs.prom.storageClass}}
      storageSize: {{.Values.dbs.prom.storageSize}}
      grafana:
        enabled: {{.Values.dbs.prom.grafana.enabled}}
        image: {{.Values.dbs.prom.grafana.image}}
        svcName: {{.Values.dbs.prom.grafana.svcName}}
        port: {{.Values.dbs.prom.grafana.port}}
        nodePort: {{.Values.dbs.prom.grafana.nodePort}}
        credsRef: {{.Values.dbs.prom.grafana.credsRef}}
  networking:
    ingress:
      type: {{.Values.networking.ingress.type}}
      timeout: {{.Values.networking.ingress.timeout}}
      retriesAttempts: {{.Values.networking.ingress.retriesAttempts}}
      perTryTimeout: {{.Values.networking.ingress.perTryTimeout}}
      istioGwEnabled: {{.Values.networking.ingress.istioGwEnabled}}
      istioGwName: {{.Values.networking.ingress.istioGwName}}
      istioIngressSelectorKey: {{.Values.networking.ingress.istioIngressSelectorKey}}
      istioIngressSelectorValue: {{.Values.networking.ingress.istioIngressSelectorValue}}
      ocpSecureRoutes: {{.Values.networking.ingress.ocpSecureRoutes}}
    https:
      enabled: {{.Values.networking.https.enabled}}
      certSecret: {{.Values.networking.https.certSecret}}
      cert: {{.Values.networking.https.cert}}
      key: {{.Values.networking.https.key}}
    proxy:
      enabled: {{.Values.networking.proxy.enabled}}
      configRef: {{.Values.networking.proxy.configRef}}
      httpProxy: {{ toJson .Values.networking.proxy.httpProxy  }}
      httpsProxy: {{ toJson .Values.networking.proxy.httpsProxy}}
      noProxy: {{ toJson .Values.networking.proxy.noProxy}}
  sso:
    enabled: {{.Values.sso.enabled}}
    version: {{.Values.sso.version}}
    pki:
      enabled: {{.Values.sso.pki.enabled}}
      rootCaSecret: {{.Values.sso.pki.rootCaSecret}}
      privateKeySecret: {{.Values.sso.pki.privateKeySecret}}
      publicKeySecret: {{.Values.sso.pki.publicKeySecret}}
    jwks:
      enabled: {{.Values.sso.jwks.enabled}}
      image: {{.Values.sso.jwks.image}}
      cacheImage: {{.Values.sso.jwks.cacheImage}}
    central:
      enabled: {{.Values.sso.central.enabled}}
      publicUrl: {{.Values.sso.central.publicUrl}}
      oauthProxyImage: {{.Values.sso.central.oauthProxyImage}}
      centralUiImage: {{.Values.sso.central.centralUiImage}}
      adminUser: {{.Values.sso.central.adminUser}}
      provider: {{.Values.sso.central.provider}}
      emailDomain: {{ toJson .Values.sso.central.emailDomain }}
      clientId: {{.Values.sso.central.clientId}}
      clientSecret: {{.Values.sso.central.clientSecret}}
      oidcIssuerUrl: {{.Values.sso.central.oidcIssuerUrl}}
      serviceUrl: {{.Values.sso.central.serviceUrl}}
      scope: {{.Values.sso.central.scope}}
      insecureOidcAllowUnverifiedEmail: {{.Values.sso.central.insecureOidcAllowUnverifiedEmail}}
      whitelistDomain: {{.Values.sso.central.whitelistDomain}}
      cookieDomain: {{.Values.sso.central.cookieDomain}}
      groupsAuth: {{.Values.sso.central.groupsAuth}}
      readiness: {{.Values.sso.central.readiness}}
      requests:
        cpu: "{{.Values.sso.central.requests.cpu}}"
        memory: "{{.Values.sso.central.requests.memory}}"
      limits:
        cpu: "{{.Values.sso.central.limits.cpu}}"
        memory: "{{.Values.sso.central.limits.memory}}"
    proxy:
      enabled: {{.Values.sso.proxy.enabled}}
      image: {{.Values.sso.proxy.image}}
      address: {{.Values.sso.proxy.address}}
      readiness: {{.Values.sso.proxy.readiness}}
      requests:
        cpu: "{{.Values.sso.proxy.requests.cpu}}"
        memory: "{{.Values.sso.proxy.requests.memory}}"
      limits:
        cpu: "{{.Values.sso.proxy.limits.cpu}}"
        memory: "{{.Values.sso.proxy.limits.memory}}"
  tenancy:
    enabled: {{.Values.tenancy.enabled}}
    key: {{.Values.tenancy.key}}
    value: {{.Values.tenancy.value}}
  priorityClass:
    appClassRef: {{.Values.priorityClass.appClassRef}}
    jobClassRef: {{.Values.priorityClass.jobClassRef}}
