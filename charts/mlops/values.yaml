version:
  operator: ''
  app: ''
  agent: ''
operatorVersion: ''
clusterDomain: ''
clusterInternalDomain: cluster.local
platform: k8s
imageHub: docker.io/cnvrg
controlPlane:
  image: core:3.6.99
  webapp:
    replicas: 1
    enabled: true
    port: 8080
    requests:
      cpu: 500m
      memory: 4Gi
    limits:
      cpu: '4'
      memory: 8Gi
    svcName: app
    nodePort: 30080
    passengerMaxPoolSize: 50
    initialDelaySeconds: 10
    readinessPeriodSeconds: 25
    readinessTimeoutSeconds: 20
    failureThreshold: 5
    hpa:
      enabled: true
      utilization: 85
      maxReplicas: 5
  sidekiq:
    enabled: true
    split: true
    requests:
      cpu: 200m
      memory: 3750Mi
    limits:
      cpu: '2'
      memory: 8Gi
    replicas: 2
    hpa:
      enabled: true
      utilization: 85
      maxReplicas: 5
  searchkiq:
    enabled: true
    requests:
      cpu: 200m
      memory: 1Gi
    limits:
      cpu: '2'
      memory: 8Gi
    replicas: 1
    hpa:
      enabled: true
      utilization: 85
      maxReplicas: 5
  systemkiq:
    enabled: true
    requests:
      cpu: 300m
      memory: 2Gi
    limits:
      cpu: '2'
      memory: 8Gi
    replicas: 1
    hpa:
      enabled: true
      utilization: 85
      maxReplicas: 5
  hyper:
    enabled: true
    image: hyper-server:v2.0
    port: 5050
    replicas: 1
    nodePort: 30050
    svcName: hyper
    token: token
    requests:
      cpu: 100m
      memory: 200Mi
    limits:
      cpu: '2'
      memory: 4Gi
    cpuLimit: ''
    memoryLimit: ''
    readinessPeriodSeconds: 100
    readinessTimeoutSeconds: 60
  cnvrgScheduler:
    enabled: false
    requests:
      cpu: 200m
      memory: 1000Mi
    limits:
      cpu: '2'
      memory: 4Gi
    replicas: 1
  baseConfig:
    jobsStorageClass: ''
    featureFlags:
      CNVRG_ENABLE_MOUNT_FOLDERS: false
      CNVRG_MOUNT_HOST_FOLDERS: false
      CNVRG_PROMETHEUS_METRICS: true
    sentryUrl: ''
    runJobsOnSelfCluster: ''
    agentCustomTag: ''
    intercom: 'true'
    cnvrgJobUid: '0'
    cnvrgJobRbacStrict: false
    cnvrgPrivilegedJob: true
    metagpuEnabled: false
  ldap:
    enabled: false
    host: ''
    port: ''
    account: userPrincipalName
    base: ''
    adminUser: ''
    adminPassword: ''
    ssl: ''
  smtp:
    server: ''
    port: 587
    username: ''
    password: ''
    domain: ''
    opensslVerifyMode: ''
    sender: info@cnvrg.io
    credentialsSecretRef: ''
  objectStorage:
    type: minio
    bucket: cnvrg-storage
    region: eastus
    accessKey: ''
    secretKey: ''
    endpoint: ''
    azureAccountName: ''
    azureContainer: ''
    gcpProject: ''
    gcpSecretRef: gcp-storage-secret
registry:
  name: cnvrg-app-registry
  url: docker.io
  user: ''
  password: ''
dbs:
  pg:
    enabled: true
    serviceAccount: pg
    image: postgresql-12-centos7:pg13
    port: 5432
    storageSize: 80Gi
    svcName: postgres
    storageClass: ''
    requests:
      cpu: '1'
      memory: 4Gi
    limits:
      cpu: '12'
      memory: 32Gi
    maxConnections: 500
    sharedBuffers: 1024MB
    effectiveCacheSize: 2048MB
    hugePages:
      enabled: false
      size: 2Mi
      memory: ''
    nodeSelector:
    credsRef: pg-creds
    pvcName: pg-storage
  redis:
    enabled: true
    serviceAccount: redis
    image: redis:7.4.0
    svcName: redis
    port: 6379
    storageSize: 10Gi
    storageClass: ''
    requests:
      cpu: 100m
      memory: 200Mi
    limits:
      cpu: 1000m
      memory: 2Gi
    nodeSelector:
    credsRef: redis-creds
    pvcName: redis-storage
  minio:
    enabled: true
    serviceAccount: minio
    replicas: 1
    image: minio:RELEASE.2024-09-13T20-26-02Z
    port: 9000
    storageSize: 100Gi
    svcName: minio
    nodePort: 30090
    storageClass: ''
    requests:
      cpu: 200m
      memory: 2Gi
    limits:
      cpu: '8'
      memory: 20Gi
    nodeSelector:
    pvcName: minio-storage
  es:
    enabled: true
    serviceAccount: es
    image: cnvrg-es:v7.17.22
    port: 9200
    storageSize: 80Gi
    svcName: elasticsearch
    nodePort: 32200
    storageClass: ''
    requests:
      cpu: 500m
      memory: 4Gi
    limits:
      cpu: '4'
      memory: 8Gi
    javaOpts: ''
    nodeSelector:
    credsRef: es-creds
    pvcName: es-storage
    cleanupPolicy:
      all: 3d
      app: 30d
      jobs: 14d
      endpoints: 1825d
    kibana:
      enabled: true
      serviceAccount: kibana
      svcName: kibana
      port: 8080
      image: cnvrg/kibana:v7.17.25
      nodePort: 30601
      requests:
        cpu: 100m
        memory: 200Mi
      limits:
        cpu: 1000m
        memory: 2Gi
      credsRef: kibana-creds
    elastalert:
      enabled: true
      image: elastalert:v5.1
      authProxyImage: nginx:1.27.1
      credsRef: elastalert-creds
      port: 8080
      nodePort: 32030
      storageSize: 30Gi
      svcName: elastalert
      storageClass: ''
      requests:
        cpu: 100m
        memory: 200Mi
      limits:
        cpu: 400m
        memory: 800Mi
      nodeSelector:
      pvcName: elastalert-storage
  prom:
    enabled: true
    credsRef: prom-creds
    extraScrapeConfigs:
    image: prometheus:v3.1.0
    storageClass: ""
    storageSize: 50Gi
    grafana:
      enabled: true
      image: grafana-oss:11.4.0
      svcName: grafana
      port: 8080
      nodePort: 30012
      credsRef: grafana-creds
networking:
  ingress:
    type: istio
    timeout: 18000s
    retriesAttempts: 5
    perTryTimeout: 3600s
    istioGwEnabled: true
    istioGwName: ''
    istioIngressSelectorKey: 'istio'
    istioIngressSelectorValue: 'ingress'
    ocpSecureRoutes: false
  https:
    enabled: false
    certSecret: ''
    cert: ''
    key: ''
  proxy:
    enabled: false
    configRef: cp-proxy
    httpProxy: []
    httpsProxy: []
    noProxy: []
  clusterDomainPrefix:
    enabled: false
    prefix: ""
sso:
  enabled: false
  version: v3
  pki:
    enabled: false
    rootCaSecret: sso-idp-root-ca
    privateKeySecret: sso-idp-private-key
    publicKeySecret: sso-idp-pki-public-key
  jwks:
    enabled: false
    name: cnvrg-jwks
    image: jwks:ns-watch-scope
    cacheImage: redis:7.4.0
  central:
    enabled: false
    publicUrl: ''
    oauthProxyImage: oauth2-proxy:v7.4.ssov3.p6
    centralUiImage: centralsso:latest
    adminUser: ''
    provider: ''
    emailDomain:
      - "*"
    clientId: ''
    clientSecret: ''
    credentialsSecretRef: ''
    oidcIssuerUrl: ''
    serviceUrl: ''
    scope: openid email profile
    insecureOidcAllowUnverifiedEmail: true
    whitelistDomain: ''
    cookieDomain: ''
    groupsAuth: false
    readiness: true
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 2
      memory: 4Gi
  proxy:
    enabled: false
    image: cap:v0.0.12
    address: ""
    readiness: true
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 2
      memory: 4Gi
tenancy:
  enabled: false
  key: purpose
  value: cnvrg-control-plane
priorityClass:
  appClassRef: ""
  jobClassRef: ""
cvatdbs:
  enabled: false
mpi:
  enabled: false
  scc: false
metastorageprovisioner:
  enabled: true
  version: ''
